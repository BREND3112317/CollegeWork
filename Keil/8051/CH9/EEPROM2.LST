C51 COMPILER V8.09   EEPROM2                                                               12/28/2007 15:18:36 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE EEPROM2
OBJECT MODULE PLACED IN EEPROM2.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE EEPROM2.C DEBUG OBJECTEXTEND

line level    source

   1          /********** EEPROM2.C *****"EEPROM 93C46實習板*********
   2          *動作：讀取16-bit陣列寫入EEPROM，再重覆讀取到P0/P1輸出
   3          *接腳：CS=P27,SK=P26,DI=P25,DO=P24,ORG=開路
   4          *****************************************************/
   5          #include "..\AT89X52.H"   //暫存器及組態定義
   6          sfr LED=0x80;    //LED由PO輸出
   7          sbit CS=P2 ^7 ;  //EEPROM 93C46接線
   8          sbit SK=P2 ^6 ;
   9          sbit DI=P2 ^5 ;
  10          sbit DO=P2 ^4 ;
  11          
  12          unsigned int code Table[] 
  13           ={0x1111,0x2222,0x3333,0x4444,0x5555,0x6666,0x7777,0x8888}; 
  14          main()
  15          {
  16   1        unsigned char i;//資料計數
  17   1        DI=1; DO=1; CS=0; SK=0;//設定初值
  18   1        EWEN();             //致能EEPROM寫入及清除
  19   1        ERAL();             //EEPROM清除全部記憶體
  20   1        for(i=0;i<8;i++)    //寫入8筆資料
  21   1          WRITE_16(i,Table[i]); //寫入位址及資料
  22   1        EWDS();    //禁能EEPROM寫入及清除
  23   1        while(1)   //不斷重覆讀取EEPROM的資料
  24   1        {  
  25   2          for(i=0;i<8;i++) //讀取8筆資料
  26   2           {
  27   3             LED=READ_16(i);   //讀取EEPROM的16-bit資料低位元組輸出
  28   3                 P1=READ_16(i)>>8; //讀取EEPROM的16-bit資料高位元組輸出
  29   3                 Delay_ms(500);    //延時
  30   3           }
  31   2        }
  32   1      }
  33          /****************************************************
  34           函數名稱: Clock
  35           功能描述:送入串列EEPROM時脈信號
  36          *****************************************************/
  37          void Clock(void)
  38           { SK=1;  SK=0; }
  39          /****************************************************
  40           函數名稱: SEND
  41           功能描述:送入EEPROM串列1-bit位址或資料
  42           輸入參數：flag
  43          *****************************************************/
  44          void SEND(bit flag)
  45           { DI=flag; Clock(); } 
  46          /*****************************************************
  47           函數名稱: SEND8
  48           功能描述: 串列EEPROM送入8-bit
  49           輸入參數：Addr
  50          ******************************************************/
  51          void SEND8(unsigned char Addr) 
  52          {
  53   1        char i;   
  54   1        for(i=0;i<8;i++)         //bit7~0 
  55   1         {
C51 COMPILER V8.09   EEPROM2                                                               12/28/2007 15:18:36 PAGE 2   

  56   2           if(Addr & 0x80) DI=1; //若bit7=1，則DI=1
  57   2             else DI= 0;         //若bit7=0，則DI=0
  58   2           Clock();              //串列時脈，bit送入EEPROM
  59   2           Addr= Addr << 1;      //位址左移
  60   2         }
  61   1      }
  62          /********************************************
  63           函數名稱:WRITE_16
  64           功能描述:93C46串列EEPROM送入位址及16-bit資料
  65           輸入參數：Addr,ch
  66          *********************************************/
  67          void WRITE_16(unsigned char Addr,unsigned int ch)
  68          { 
  69   1        CS=1;     //開啟EEPROM晶片
  70   1        SEND(1);          //啟始位元 
  71   1        SEND8(0x40+Addr); //送入操作碼01及位址  
  72   1        SEND8(ch>>8);     //寫入高位元組資料
  73   1        SEND8(ch);        //寫入低位元組資料
  74   1        CS=0;             //關閉EEPROM晶片 
  75   1       CS=1; while(!DO) Clock(); CS=0;//等待寫入完畢   
  76   1      }
  77          /*************************************************
  78           函數名稱: READ_16
  79           功能描述: 讀取93C46串列EEPROM資料
  80           輸入參數：Addr
  81           輸出參數：ch
  82          **************************************************/
  83          unsigned int READ_16(unsigned char Addr)
  84          {
  85   1        char i;
  86   1        unsigned int ch;   //16-bit資料
  87   1        CS=1;              //開啟EEPROM晶片  
  88   1        SEND(1);           //啟始位元 
  89   1        SEND8(0x80+Addr);  //送入操作碼10及位址  
  90   1        if(DO==0)
  91   1        {
  92   2              ch=0;  //資料=0
  93   2              for(i=0; i < 16; i++)//讀取16-bit資料
  94   2               {
  95   3                 Clock();        //串列資料由DO輸出
  96   3                 ch=ch << 1;     //資料位元左移
  97   3                 if(DO==1) ch++; //若DO=1，則ch資料bit0=1
  98   3               }
  99   2         }
 100   1        CS=0;       //關閉EEPROM晶片 
 101   1        return ch;  //將16-bit資料送回主程式
 102   1      }
 103          /****************************************************
 104           函數名稱: EWEN
 105           功能描述: 93C46串列EEPROM寫入及清除致能
 106          ****************************************************/
 107          void EWEN(void)   //EEPROM寫入及清除致能
 108          {
 109   1        CS=1;        //開啟EEPROM晶片
 110   1        SEND(1);     //啟始位元
 111   1        SEND8(0x30); //送入操作碼00及指令，致能抹除/寫入動作
 112   1        CS=0;        //關閉EEPROM晶片
 113   1      }
 114          /************************************************
 115           函數名稱: EWDS
 116           功能描述: 93C46串列EEPROM寫入及清除禁能
 117          ***********************************************/
C51 COMPILER V8.09   EEPROM2                                                               12/28/2007 15:18:36 PAGE 3   

 118          void EWDS(void)//EEPROM寫入及清除禁能
 119          {
 120   1        CS=1;        //開啟EEPROM晶片
 121   1        SEND(1);     //啟始位元
 122   1        SEND8(0x00); //送入操作碼00及指令，禁能抹除/寫入動作
 123   1        CS=0;        //關閉EEPROM晶片
 124   1      } 
 125          /*************************************************
 126           函數名稱: ERAL
 127           功能描述: 93C46串列EEPROM清除全部記憶體
 128          **************************************************/
 129          void ERAL(void) //EEPROM清除全部記憶體
 130          {
 131   1        CS=1;        //開啟EEPROM晶片
 132   1        SEND(1);     //啟始位元
 133   1        SEND8(0x20); //送入操作碼00及指令，禁能抹除/寫入動作
 134   1        CS=0;        //關閉EEPROM晶片
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
