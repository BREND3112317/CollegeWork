C51 COMPILER V8.09   KEY5                                                                  03/17/2008 16:28:34 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE KEY5
OBJECT MODULE PLACED IN KEY5.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE KEY5.c DEBUG OBJECTEXTEND

line level    source

   1          /******** KEY5.C******4*5鍵盤實習範例***************
   2          *動作：在LCD顯示"KEY="，按鍵由LCD顯示4位數移位動作
   3          *接腳：列ROW0=P10,ROW1=P11,ROW2=P12,ROW3=P13,ROW4=P14 
   4          *      行COL0=P20,COL1=P21,COL2=P22,COL3=P23 
   5          *      P0=LCD的Data，P16=RS，RW=GND，P17=EN
   6          *****************************************/
   7          #include "..\AT89X52.H"   //暫存器及組態定義
   8          sfr  Data=0x80;//P0資料BUS輸出
   9          sbit RS=0x96;  //P16 LCD指令/資料控制,RS=0指令，RS=1資料
  10                         //LCD讀取/寫入控制,R/W=GND寫入
  11          sbit EN=0x97;  //P17 LCD致能輸出,EN=0禁能LCD，EN=1致能LCD
  12          
  13          sfr  ROW=0x90;  //P1為按鍵掃描輸出接腳
  14          sbit COL0=P2^0; //P2按鍵輸入接腳
  15          sbit COL1=P2^1;
  16          sbit COL2=P2^2;
  17          sbit COL3=P2^3;
  18          char code  Table[]="KEY="; //第一行陣列字元
  19          
  20          void dataout(uint8 keyout); //按鍵資料輸出
  21          unsigned char i=0;      //LCD顯示位置
  22          unsigned long lcd_count;        //LCD顯示數字
  23          void main()
  24          {
  25   1       char count=0;   //按鍵計數=0
  26   1       unsigned char scan=0xfe;  //按鍵掃描令ROW0=0，其餘為1
  27   1       LCD_init();            // 重置及清除LCD
  28   1       LCD_Cmd(0x80);     //游標由第一行開始顯示  
  29   1       for(i=0; i<4; i++) //讀取陣列"KEY= "字元到LCD顯示出來 
  30   1         LCD_Data(Table[i]);   
  31   1       LCD_Disp(lcd_count); //LCD顯示4位數十進制數字
  32   1       while(1)   //重覆執行
  33   1        {
  34   2          if(count>19){scan=0xfe;count=0;}//若計數>19，從頭開始
  35   2          ROW=scan;             //掃描輸出
  36   2              if(COL0==0) dataout(count);//檢查COL0列，若是計數輸出
  37   2          count++; Delay_ms(1);      //若不是，計數+1
  38   2          if(COL1==0) dataout(count);//檢查COL1列，若是計數輸出
  39   2          count++; Delay_ms(1);      //若不是，計數+1
  40   2          if(COL2==0) dataout(count);//檢查COL2列，若是計數輸出
  41   2          count++; Delay_ms(1);      //若不是，計數+1
  42   2          if(COL3==0) dataout(count);//檢查COL3列，若是計數輸出
  43   2          count++; Delay_ms(1);      //若不是，計數+1
  44   2          scan=RL8(scan); //左旋轉，換掃下一列,令ROW0~4輪流為0
  45   2         }
  46   1      }
  47          /***********************************************************
  48          *函數名稱: dataout
  49          *功能描述: 按鍵輸出資料送到LCD顯示數字，檢查是否放開按鍵
  50          *輸入參數：keyout
  51          ************************************************************/
  52          void dataout(char keyout) 
  53          {   
  54   1        LCD_Cmd(0x84);
  55   1        if(keyout<=9) //限制輸入0~9鍵
C51 COMPILER V8.09   KEY5                                                                  03/17/2008 16:28:34 PAGE 2   

  56   1         {  
  57   2          lcd_count=(lcd_count*10)+keyout;  //數字進位
  58   2                        //若計數超過9999僅顯示後四碼
  59   2          if(lcd_count>9999) lcd_count=lcd_count % 10000; 
  60   2          LCD_Disp(lcd_count); //LCD顯示4位數十進制數字
  61   2         }
  62   1      
  63   1        Delay_ms(1);          //處理按鍵跳動之延遲
  64   1        while(!(COL0 & COL1 & COL2 & COL3));//若COL0~3≠1111未放開按鍵
  65   1        Delay_ms(1);       //處理按鍵跳動之延遲
  66   1      }
  67          /*****************************************************
  68          * 函數名稱: LCD_Disp(unsigned int disp)
  69          * 功能描述: LCD顯示4位數十進制數字
  70          * 輸入參數：disp
  71          *******************************************************/
  72          void LCD_Disp(unsigned int disp)  // LCD顯示4位數十進制數字
  73          {
  74   1       LCD_Data(disp /1000+'0');        //取出千位數字元到LCD顯示
  75   1       LCD_Data(disp % 1000/100+'0');   //取出百位數字元到LCD顯示
  76   1       LCD_Data(disp % 100/10+'0');     //取出十位數字元到LCD顯示
  77   1       LCD_Data(disp % 10+'0');         //取出個位數字元到LCD顯示
  78   1      }
  79          /***********************************************************
  80          *函數名稱: LCD_Data
  81          *功能描述: 傳送資料到文字型LCD
  82          *輸入參數：dat
  83          ************************************************************/
  84          void LCD_Data(char dat)  //傳送資料到LCD
  85          {
  86   1          Data=dat; //資料送到BUS
  87   1          RS=1;EN=1;//資料寫入到LCD內
  88   1          Delay_ms(1);   //LCD等待寫入完成
  89   1          EN=0;          //禁能LCD    
  90   1      }
  91          /***************************************************************
  92          *函數名稱: LCD_Cmd
  93          *功能描述: 傳送命令到文字型LCD
  94          *輸入參數：Cmd
  95          ************************************************************/
  96          void LCD_Cmd(unsigned char Cmd) //傳送命令到LCD
  97          {
  98   1          Data=Cmd;  //命令送到BUS
  99   1          RS=0;EN=1; //命令寫入到LCD內
 100   1          Delay_ms(1);    //LCD等待寫入完成     
 101   1          EN=0;           //禁能LCD
 102   1      }
 103          /***************************************************************
 104          *函數名稱: LCD_init
 105          *功能描述: 啟始化文字型LCD
 106          *****************************************************************/
 107          void LCD_init(void)    //LCD的啟始程式  
 108          {
 109   1          LCD_Cmd(0x38);/*0011 1000,8bit傳輸,顯示2行,5*7字型
 110   1                          bit4:DL=1,8bit傳輸,
 111   1                          bit3:N=1,顯示2行
 112   1                          bit2:F=0,5*7字型*/    
 113   1          LCD_Cmd(0x0c);/*0000 1100,顯示幕ON,不顯示游標,游標不閃爍
 114   1                          bit2:D=1,顯示幕ON
 115   1                          bit1:C=0,不顯示游標
 116   1                              bit0:B=0,游標不閃爍*/
 117   1          LCD_Cmd(0x06);/*0000 0110,//顯示完游標右移,游標移位禁能 
C51 COMPILER V8.09   KEY5                                                                  03/17/2008 16:28:34 PAGE 3   

 118   1                          bit1:I/D=1,顯示完游標右移,
 119   1                          bit0:S=0,游標移位禁能*/  
 120   1          LCD_Cmd(0x01); //清除顯示幕  
 121   1          LCD_Cmd(0x02); //游標回原位  
 122   1      }
 123          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
