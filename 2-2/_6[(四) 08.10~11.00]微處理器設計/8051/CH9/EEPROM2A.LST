C51 COMPILER V8.09   EEPROM2A                                                              12/28/2007 15:08:58 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE EEPROM2A
OBJECT MODULE PLACED IN EEPROM2A.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE EEPROM2A.C DEBUG OBJECTEXTEND

line level    source

   1           /********** EEPROM2A.C *********************************
   2          *動作：讀取16-bit陣列資料寫入EEPROM，再重覆讀取到LED輸出
   3          *接腳：CS=P33,SK=P05,DI=P06,DO=P07,ORG=開路
   4          ******************************************************/
   5          #include "..\AT89X52.H"   //暫存器及組態定義
   6          sfr LED=0x80;   //LED由P0輸出
   7          sbit CS=P2 ^7 ; //EEPROM 93C46接線
   8          sbit SK=P2 ^6 ;
   9          sbit DI=P2 ^5 ;
  10          sbit DO=P2 ^4 ;
  11          
  12          uint16 code Table[] 
  13            ={0x0101,0x0202,0x0404,0x0808,0x1010,0x2020,0x4040,0x8080}; 
  14           /****************************************************
  15           函數名稱: Clock
  16           功能描述:送入93C46串列EEPROM時脈信號
  17          *****************************************************/
  18          void Clock(void)
  19           {
  20   1        SK=1;Delay_ms(1); 
  21   1        SK=0;Delay_ms(1);
  22   1       }
  23          /*****************************************************
  24           函數名稱: Write
  25           功能描述: 送入93C46串列送入OP code及EEPROM位址
  26           輸入參數：Addr
  27          ******************************************************/
  28          void Write(uint8 Addr) //送入OP code(xx)及位址(A5~A0)
  29          {
  30   1        uint8 i;   
  31   1        for(i=0;i<8;i++)       //bit7 ~A0 
  32   1         {
  33   2           if(Addr & 0x80) DI=1; //若bit7=1，則DI=1
  34   2             else DI= 0;         //若bit7=0，則DI=0
  35   2           Clock();              //串列時脈，位址輸入EEPROM
  36   2           Addr= Addr << 1;      //位址左移
  37   2         }
  38   1      }
  39          /*************************************************
  40           函數名稱: Read_16
  41           功能描述: 讀取93C46串列EEPROM資料
  42           輸入參數：Addr
  43          **************************************************/
  44          uint16 Read_16(uint8 Addr)
  45           {
  46   1        uint8 i;
  47   1        uint16 ch=0; //16-bit資料
  48   1        CS=1;        //開啟EEPROM晶片  
  49   1        DI=1; Clock();   //啟始位元
  50   1        Write(Addr+0x80);//送入OP code(10)及位址      
  51   1        for(i=0;i<16;i++)//讀取16-bit資料 
  52   1         {
  53   2           Clock();      //串列資料由DO輸出
  54   2           ch=ch << 1;   //資料位元左移
  55   2           if(DO==1)  ch=ch | 0x01; //若DO=1，則ch資料位元=1
C51 COMPILER V8.09   EEPROM2A                                                              12/28/2007 15:08:58 PAGE 2   

  56   2          }
  57   1        CS=0;       //關閉EEPROM晶片 
  58   1        return ch;  //將16-bit資料送回主程式
  59   1      }
  60          /********************************************
  61           函數名稱:Send_16
  62           功能描述:送入位址及16-bit資料
  63           輸入參數：Addr,ch
  64          *********************************************/
  65          void Send_16(uint8 Addr,uint16 ch)      //送入位址及16-bit資料
  66          { 
  67   1        CS=1;     //開啟EEPROM晶片
  68   1        DI=1;Clock() ;   //啟始位元    
  69   1        Write(Addr+0x40); //送入OP code(01)及位址  
  70   1        Write(ch>>8);//寫入高位元組資料
  71   1        Write(ch); //寫入低位元組資料
  72   1        Delay_ms(1);     //等待寫入完畢
  73   1        CS=0;            //關閉EEPROM晶片
  74   1      }
  75          /****************************************************
  76           函數名稱: EWEN
  77           功能描述: 93C46串列EEPROM寫入及清除致能
  78          ****************************************************/
  79          void EWEN(void)   //EEPROM寫入及清除致能
  80          {
  81   1        CS=1;          //開啟EEPROM晶片
  82   1        DI=1; Clock(); //啟始位元    
  83   1        Write(0x30);    //送入OP code(00)及寫入致能位址  
  84   1        CS=0;          //關閉EEPROM晶片
  85   1      }
  86          /************************************************
  87           函數名稱: EWDS
  88           功能描述: 93C46串列EEPROM寫入及清除禁能
  89          ***********************************************/
  90          void EWDS(void)  //EEPROM寫入及清除禁能
  91          {
  92   1        CS=1;         //開啟EEPROM晶片
  93   1        DI=1;Clock(); //啟始位元          
  94   1        Write(0x00);   //送入OP code(00)及//寫入禁能位址
  95   1        CS=0;         //關閉EEPROM晶片
  96   1       } 
  97          /*************************************************
  98           函數名稱: ERAL
  99           功能描述: 93C46串列EEPROM清除全部記憶體
 100          **************************************************/
 101          void ERAL(void) //EEPROM清除全部記憶體
 102          {
 103   1        CS=1;        //開啟EEPROM晶片
 104   1        DI=1;Clock();//啟始位元
 105   1        Write(0x20);  //送入OP code(00)及清除全部記憶體位址
 106   1        CS=0;        //關閉EEPROM晶片
 107   1      }
 108          //***********************************************/
 109          main()
 110           {
 111   1         uint8  i; 
 112   1         uint16 var; //宣告16-bit資料
 113   1         CS=0; SK=0; DO=1; DI=1;//EEPROM的接腳啟始電位
 114   1         EWEN(); //寫入及清除致能   
 115   1         ERAL(); //清除全部記憶體
 116   1         for(i=0;i<8;i++) //寫入EEPROM資料
 117   1          {
C51 COMPILER V8.09   EEPROM2A                                                              12/28/2007 15:08:58 PAGE 3   

 118   2            var=Table[i]; //讀取列表資料
 119   2            Send_16(i,var);  //送入位址及16-bit資料
 120   2                LED=(var>>8);    //資料高位元組反相輸出
 121   2                //P1=~var;       //資料低位元組反相輸出
 122   2            Delay_ms(200);  //延時
 123   2          }
 124   1         EWDS();   //寫入及清除禁能
 125   1        
 126   1         while(1)   //不斷重覆讀取EEPROM的資料
 127   1          {  
 128   2             for(i=0;i<8;i++) //讀取EEPROM資料
 129   2             {
 130   3              var=Read_16(i);//讀取EEPROM的16-bit資料
 131   3                      LED=(var>>8); //資料高位元組反相輸出
 132   3              //      P1=~var;        //資料低位元組反相輸出
 133   3              Delay_ms(200);  //延時
 134   3             }
 135   2         }
 136   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    271    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
